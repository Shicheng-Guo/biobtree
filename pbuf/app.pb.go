// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app.proto

package pbuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BiobtreeGetRequest struct {
	Keywords             []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeGetRequest) Reset()         { *m = BiobtreeGetRequest{} }
func (m *BiobtreeGetRequest) String() string { return proto.CompactTextString(m) }
func (*BiobtreeGetRequest) ProtoMessage()    {}
func (*BiobtreeGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}

func (m *BiobtreeGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeGetRequest.Unmarshal(m, b)
}
func (m *BiobtreeGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeGetRequest.Marshal(b, m, deterministic)
}
func (m *BiobtreeGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeGetRequest.Merge(m, src)
}
func (m *BiobtreeGetRequest) XXX_Size() int {
	return xxx_messageInfo_BiobtreeGetRequest.Size(m)
}
func (m *BiobtreeGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeGetRequest proto.InternalMessageInfo

func (m *BiobtreeGetRequest) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

type BiobtreeGetPageRequest struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Dataset              int32    `protobuf:"varint,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Total                int32    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeGetPageRequest) Reset()         { *m = BiobtreeGetPageRequest{} }
func (m *BiobtreeGetPageRequest) String() string { return proto.CompactTextString(m) }
func (*BiobtreeGetPageRequest) ProtoMessage()    {}
func (*BiobtreeGetPageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}

func (m *BiobtreeGetPageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeGetPageRequest.Unmarshal(m, b)
}
func (m *BiobtreeGetPageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeGetPageRequest.Marshal(b, m, deterministic)
}
func (m *BiobtreeGetPageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeGetPageRequest.Merge(m, src)
}
func (m *BiobtreeGetPageRequest) XXX_Size() int {
	return xxx_messageInfo_BiobtreeGetPageRequest.Size(m)
}
func (m *BiobtreeGetPageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeGetPageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeGetPageRequest proto.InternalMessageInfo

func (m *BiobtreeGetPageRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *BiobtreeGetPageRequest) GetDataset() int32 {
	if m != nil {
		return m.Dataset
	}
	return 0
}

func (m *BiobtreeGetPageRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *BiobtreeGetPageRequest) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type BiobtreeFilterRequest struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Dataset              int32    `protobuf:"varint,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Filters              []uint32 `protobuf:"varint,3,rep,packed,name=filters,proto3" json:"filters,omitempty"`
	Page                 int32    `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeFilterRequest) Reset()         { *m = BiobtreeFilterRequest{} }
func (m *BiobtreeFilterRequest) String() string { return proto.CompactTextString(m) }
func (*BiobtreeFilterRequest) ProtoMessage()    {}
func (*BiobtreeFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{2}
}

func (m *BiobtreeFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeFilterRequest.Unmarshal(m, b)
}
func (m *BiobtreeFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeFilterRequest.Marshal(b, m, deterministic)
}
func (m *BiobtreeFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeFilterRequest.Merge(m, src)
}
func (m *BiobtreeFilterRequest) XXX_Size() int {
	return xxx_messageInfo_BiobtreeFilterRequest.Size(m)
}
func (m *BiobtreeFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeFilterRequest proto.InternalMessageInfo

func (m *BiobtreeFilterRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *BiobtreeFilterRequest) GetDataset() int32 {
	if m != nil {
		return m.Dataset
	}
	return 0
}

func (m *BiobtreeFilterRequest) GetFilters() []uint32 {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *BiobtreeFilterRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BiobtreeMapFilterRequest struct {
	Keywords             []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	MapFilterQuery       string   `protobuf:"bytes,2,opt,name=mapFilterQuery,proto3" json:"mapFilterQuery,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeMapFilterRequest) Reset()         { *m = BiobtreeMapFilterRequest{} }
func (m *BiobtreeMapFilterRequest) String() string { return proto.CompactTextString(m) }
func (*BiobtreeMapFilterRequest) ProtoMessage()    {}
func (*BiobtreeMapFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{3}
}

func (m *BiobtreeMapFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeMapFilterRequest.Unmarshal(m, b)
}
func (m *BiobtreeMapFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeMapFilterRequest.Marshal(b, m, deterministic)
}
func (m *BiobtreeMapFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeMapFilterRequest.Merge(m, src)
}
func (m *BiobtreeMapFilterRequest) XXX_Size() int {
	return xxx_messageInfo_BiobtreeMapFilterRequest.Size(m)
}
func (m *BiobtreeMapFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeMapFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeMapFilterRequest proto.InternalMessageInfo

func (m *BiobtreeMapFilterRequest) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *BiobtreeMapFilterRequest) GetMapFilterQuery() string {
	if m != nil {
		return m.MapFilterQuery
	}
	return ""
}

type BiobtreeMetaRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeMetaRequest) Reset()         { *m = BiobtreeMetaRequest{} }
func (m *BiobtreeMetaRequest) String() string { return proto.CompactTextString(m) }
func (*BiobtreeMetaRequest) ProtoMessage()    {}
func (*BiobtreeMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{4}
}

func (m *BiobtreeMetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeMetaRequest.Unmarshal(m, b)
}
func (m *BiobtreeMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeMetaRequest.Marshal(b, m, deterministic)
}
func (m *BiobtreeMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeMetaRequest.Merge(m, src)
}
func (m *BiobtreeMetaRequest) XXX_Size() int {
	return xxx_messageInfo_BiobtreeMetaRequest.Size(m)
}
func (m *BiobtreeMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeMetaRequest proto.InternalMessageInfo

type BiobtreeGetResponse struct {
	Results              []*Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BiobtreeGetResponse) Reset()         { *m = BiobtreeGetResponse{} }
func (m *BiobtreeGetResponse) String() string { return proto.CompactTextString(m) }
func (*BiobtreeGetResponse) ProtoMessage()    {}
func (*BiobtreeGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{5}
}

func (m *BiobtreeGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeGetResponse.Unmarshal(m, b)
}
func (m *BiobtreeGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeGetResponse.Marshal(b, m, deterministic)
}
func (m *BiobtreeGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeGetResponse.Merge(m, src)
}
func (m *BiobtreeGetResponse) XXX_Size() int {
	return xxx_messageInfo_BiobtreeGetResponse.Size(m)
}
func (m *BiobtreeGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeGetResponse proto.InternalMessageInfo

func (m *BiobtreeGetResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type BiobtreeGetPageResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeGetPageResponse) Reset()         { *m = BiobtreeGetPageResponse{} }
func (m *BiobtreeGetPageResponse) String() string { return proto.CompactTextString(m) }
func (*BiobtreeGetPageResponse) ProtoMessage()    {}
func (*BiobtreeGetPageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{6}
}

func (m *BiobtreeGetPageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeGetPageResponse.Unmarshal(m, b)
}
func (m *BiobtreeGetPageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeGetPageResponse.Marshal(b, m, deterministic)
}
func (m *BiobtreeGetPageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeGetPageResponse.Merge(m, src)
}
func (m *BiobtreeGetPageResponse) XXX_Size() int {
	return xxx_messageInfo_BiobtreeGetPageResponse.Size(m)
}
func (m *BiobtreeGetPageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeGetPageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeGetPageResponse proto.InternalMessageInfo

func (m *BiobtreeGetPageResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type BiobtreeFilterResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiobtreeFilterResponse) Reset()         { *m = BiobtreeFilterResponse{} }
func (m *BiobtreeFilterResponse) String() string { return proto.CompactTextString(m) }
func (*BiobtreeFilterResponse) ProtoMessage()    {}
func (*BiobtreeFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{7}
}

func (m *BiobtreeFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeFilterResponse.Unmarshal(m, b)
}
func (m *BiobtreeFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeFilterResponse.Marshal(b, m, deterministic)
}
func (m *BiobtreeFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeFilterResponse.Merge(m, src)
}
func (m *BiobtreeFilterResponse) XXX_Size() int {
	return xxx_messageInfo_BiobtreeFilterResponse.Size(m)
}
func (m *BiobtreeFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeFilterResponse proto.InternalMessageInfo

func (m *BiobtreeFilterResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type BiobtreeMapFilterResponse struct {
	Results              []*MapFilterResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BiobtreeMapFilterResponse) Reset()         { *m = BiobtreeMapFilterResponse{} }
func (m *BiobtreeMapFilterResponse) String() string { return proto.CompactTextString(m) }
func (*BiobtreeMapFilterResponse) ProtoMessage()    {}
func (*BiobtreeMapFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{8}
}

func (m *BiobtreeMapFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeMapFilterResponse.Unmarshal(m, b)
}
func (m *BiobtreeMapFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeMapFilterResponse.Marshal(b, m, deterministic)
}
func (m *BiobtreeMapFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeMapFilterResponse.Merge(m, src)
}
func (m *BiobtreeMapFilterResponse) XXX_Size() int {
	return xxx_messageInfo_BiobtreeMapFilterResponse.Size(m)
}
func (m *BiobtreeMapFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeMapFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeMapFilterResponse proto.InternalMessageInfo

func (m *BiobtreeMapFilterResponse) GetResults() []*MapFilterResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type BiobtreeMetaResponse struct {
	Results              map[string]*BiobtreeMetaKeyValue `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *BiobtreeMetaResponse) Reset()         { *m = BiobtreeMetaResponse{} }
func (m *BiobtreeMetaResponse) String() string { return proto.CompactTextString(m) }
func (*BiobtreeMetaResponse) ProtoMessage()    {}
func (*BiobtreeMetaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{9}
}

func (m *BiobtreeMetaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeMetaResponse.Unmarshal(m, b)
}
func (m *BiobtreeMetaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeMetaResponse.Marshal(b, m, deterministic)
}
func (m *BiobtreeMetaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeMetaResponse.Merge(m, src)
}
func (m *BiobtreeMetaResponse) XXX_Size() int {
	return xxx_messageInfo_BiobtreeMetaResponse.Size(m)
}
func (m *BiobtreeMetaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeMetaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeMetaResponse proto.InternalMessageInfo

func (m *BiobtreeMetaResponse) GetResults() map[string]*BiobtreeMetaKeyValue {
	if m != nil {
		return m.Results
	}
	return nil
}

type BiobtreeMetaKeyValue struct {
	Keyvalues            map[string]string `protobuf:"bytes,1,rep,name=keyvalues,proto3" json:"keyvalues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BiobtreeMetaKeyValue) Reset()         { *m = BiobtreeMetaKeyValue{} }
func (m *BiobtreeMetaKeyValue) String() string { return proto.CompactTextString(m) }
func (*BiobtreeMetaKeyValue) ProtoMessage()    {}
func (*BiobtreeMetaKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{10}
}

func (m *BiobtreeMetaKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BiobtreeMetaKeyValue.Unmarshal(m, b)
}
func (m *BiobtreeMetaKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BiobtreeMetaKeyValue.Marshal(b, m, deterministic)
}
func (m *BiobtreeMetaKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiobtreeMetaKeyValue.Merge(m, src)
}
func (m *BiobtreeMetaKeyValue) XXX_Size() int {
	return xxx_messageInfo_BiobtreeMetaKeyValue.Size(m)
}
func (m *BiobtreeMetaKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_BiobtreeMetaKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_BiobtreeMetaKeyValue proto.InternalMessageInfo

func (m *BiobtreeMetaKeyValue) GetKeyvalues() map[string]string {
	if m != nil {
		return m.Keyvalues
	}
	return nil
}

type Result struct {
	Results              []*Xref  `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Nextpage             string   `protobuf:"bytes,2,opt,name=nextpage,proto3" json:"nextpage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{11}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetResults() []*Xref {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Result) GetNextpage() string {
	if m != nil {
		return m.Nextpage
	}
	return ""
}

type MapFilterResult struct {
	Results              []*MapFilter `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Nextpage             string       `protobuf:"bytes,2,opt,name=nextpage,proto3" json:"nextpage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MapFilterResult) Reset()         { *m = MapFilterResult{} }
func (m *MapFilterResult) String() string { return proto.CompactTextString(m) }
func (*MapFilterResult) ProtoMessage()    {}
func (*MapFilterResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{12}
}

func (m *MapFilterResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapFilterResult.Unmarshal(m, b)
}
func (m *MapFilterResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapFilterResult.Marshal(b, m, deterministic)
}
func (m *MapFilterResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapFilterResult.Merge(m, src)
}
func (m *MapFilterResult) XXX_Size() int {
	return xxx_messageInfo_MapFilterResult.Size(m)
}
func (m *MapFilterResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MapFilterResult.DiscardUnknown(m)
}

var xxx_messageInfo_MapFilterResult proto.InternalMessageInfo

func (m *MapFilterResult) GetResults() []*MapFilter {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *MapFilterResult) GetNextpage() string {
	if m != nil {
		return m.Nextpage
	}
	return ""
}

type MapFilter struct {
	Source               *Xref    `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Targets              []*Xref  `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapFilter) Reset()         { *m = MapFilter{} }
func (m *MapFilter) String() string { return proto.CompactTextString(m) }
func (*MapFilter) ProtoMessage()    {}
func (*MapFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{13}
}

func (m *MapFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapFilter.Unmarshal(m, b)
}
func (m *MapFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapFilter.Marshal(b, m, deterministic)
}
func (m *MapFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapFilter.Merge(m, src)
}
func (m *MapFilter) XXX_Size() int {
	return xxx_messageInfo_MapFilter.Size(m)
}
func (m *MapFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_MapFilter.DiscardUnknown(m)
}

var xxx_messageInfo_MapFilter proto.InternalMessageInfo

func (m *MapFilter) GetSource() *Xref {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *MapFilter) GetTargets() []*Xref {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Xref struct {
	Dataset uint32 `protobuf:"varint,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	IsLink  bool   `protobuf:"varint,2,opt,name=is_link,json=isLink,proto3" json:"is_link,omitempty"`
	//these 2 fields are transient fields not saved to database
	Identifier string `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Keyword    string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// Types that are valid to be assigned to Attributes:
	//	*Xref_Empty
	//	*Xref_Uniprot
	//	*Xref_Gontology
	//	*Xref_Hgnc
	//	*Xref_Interpro
	//	*Xref_Ensembl
	//	*Xref_Taxonomy
	//	*Xref_Hmdb
	//	*Xref_Ena
	//	*Xref_Pdb
	//	*Xref_Drugbank
	//	*Xref_Orphanet
	//	*Xref_Reactome
	//	*Xref_Chembl
	//	*Xref_Ufeature
	//	*Xref_Efo
	Attributes           isXref_Attributes    `protobuf_oneof:"attributes"`
	Count                uint32               `protobuf:"varint,20,opt,name=count,proto3" json:"count,omitempty"`
	Entries              []*XrefEntry         `protobuf:"bytes,21,rep,name=entries,proto3" json:"entries,omitempty"`
	DatasetCounts        []*XrefDomainCount   `protobuf:"bytes,22,rep,name=dataset_counts,json=datasetCounts,proto3" json:"dataset_counts,omitempty"`
	DatasetPages         map[uint32]*PageInfo `protobuf:"bytes,23,rep,name=datasetPages,proto3" json:"datasetPages,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pages                []string             `protobuf:"bytes,24,rep,name=pages,proto3" json:"pages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Xref) Reset()         { *m = Xref{} }
func (m *Xref) String() string { return proto.CompactTextString(m) }
func (*Xref) ProtoMessage()    {}
func (*Xref) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{14}
}

func (m *Xref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Xref.Unmarshal(m, b)
}
func (m *Xref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Xref.Marshal(b, m, deterministic)
}
func (m *Xref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Xref.Merge(m, src)
}
func (m *Xref) XXX_Size() int {
	return xxx_messageInfo_Xref.Size(m)
}
func (m *Xref) XXX_DiscardUnknown() {
	xxx_messageInfo_Xref.DiscardUnknown(m)
}

var xxx_messageInfo_Xref proto.InternalMessageInfo

func (m *Xref) GetDataset() uint32 {
	if m != nil {
		return m.Dataset
	}
	return 0
}

func (m *Xref) GetIsLink() bool {
	if m != nil {
		return m.IsLink
	}
	return false
}

func (m *Xref) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Xref) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type isXref_Attributes interface {
	isXref_Attributes()
}

type Xref_Empty struct {
	Empty bool `protobuf:"varint,5,opt,name=empty,proto3,oneof"`
}

type Xref_Uniprot struct {
	Uniprot *UniprotAttr `protobuf:"bytes,6,opt,name=uniprot,proto3,oneof"`
}

type Xref_Gontology struct {
	Gontology *GoAttr `protobuf:"bytes,7,opt,name=gontology,proto3,oneof"`
}

type Xref_Hgnc struct {
	Hgnc *HgncAttr `protobuf:"bytes,8,opt,name=hgnc,proto3,oneof"`
}

type Xref_Interpro struct {
	Interpro *InterproAttr `protobuf:"bytes,9,opt,name=interpro,proto3,oneof"`
}

type Xref_Ensembl struct {
	Ensembl *EnsemblAttr `protobuf:"bytes,10,opt,name=ensembl,proto3,oneof"`
}

type Xref_Taxonomy struct {
	Taxonomy *TaxoAttr `protobuf:"bytes,11,opt,name=taxonomy,proto3,oneof"`
}

type Xref_Hmdb struct {
	Hmdb *HmdbAttr `protobuf:"bytes,12,opt,name=hmdb,proto3,oneof"`
}

type Xref_Ena struct {
	Ena *EnaAttr `protobuf:"bytes,13,opt,name=ena,proto3,oneof"`
}

type Xref_Pdb struct {
	Pdb *PdbAttr `protobuf:"bytes,14,opt,name=pdb,proto3,oneof"`
}

type Xref_Drugbank struct {
	Drugbank *DrugbankAttr `protobuf:"bytes,15,opt,name=drugbank,proto3,oneof"`
}

type Xref_Orphanet struct {
	Orphanet *OrphanetAttr `protobuf:"bytes,16,opt,name=orphanet,proto3,oneof"`
}

type Xref_Reactome struct {
	Reactome *ReactomeAttr `protobuf:"bytes,17,opt,name=reactome,proto3,oneof"`
}

type Xref_Chembl struct {
	Chembl *ChemblAttr `protobuf:"bytes,18,opt,name=chembl,proto3,oneof"`
}

type Xref_Ufeature struct {
	Ufeature *UniprotFeatureAttr `protobuf:"bytes,19,opt,name=ufeature,proto3,oneof"`
}

type Xref_Efo struct {
	Efo *EfoAttr `protobuf:"bytes,25,opt,name=efo,proto3,oneof"`
}

func (*Xref_Empty) isXref_Attributes() {}

func (*Xref_Uniprot) isXref_Attributes() {}

func (*Xref_Gontology) isXref_Attributes() {}

func (*Xref_Hgnc) isXref_Attributes() {}

func (*Xref_Interpro) isXref_Attributes() {}

func (*Xref_Ensembl) isXref_Attributes() {}

func (*Xref_Taxonomy) isXref_Attributes() {}

func (*Xref_Hmdb) isXref_Attributes() {}

func (*Xref_Ena) isXref_Attributes() {}

func (*Xref_Pdb) isXref_Attributes() {}

func (*Xref_Drugbank) isXref_Attributes() {}

func (*Xref_Orphanet) isXref_Attributes() {}

func (*Xref_Reactome) isXref_Attributes() {}

func (*Xref_Chembl) isXref_Attributes() {}

func (*Xref_Ufeature) isXref_Attributes() {}

func (*Xref_Efo) isXref_Attributes() {}

func (m *Xref) GetAttributes() isXref_Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Xref) GetEmpty() bool {
	if x, ok := m.GetAttributes().(*Xref_Empty); ok {
		return x.Empty
	}
	return false
}

func (m *Xref) GetUniprot() *UniprotAttr {
	if x, ok := m.GetAttributes().(*Xref_Uniprot); ok {
		return x.Uniprot
	}
	return nil
}

func (m *Xref) GetGontology() *GoAttr {
	if x, ok := m.GetAttributes().(*Xref_Gontology); ok {
		return x.Gontology
	}
	return nil
}

func (m *Xref) GetHgnc() *HgncAttr {
	if x, ok := m.GetAttributes().(*Xref_Hgnc); ok {
		return x.Hgnc
	}
	return nil
}

func (m *Xref) GetInterpro() *InterproAttr {
	if x, ok := m.GetAttributes().(*Xref_Interpro); ok {
		return x.Interpro
	}
	return nil
}

func (m *Xref) GetEnsembl() *EnsemblAttr {
	if x, ok := m.GetAttributes().(*Xref_Ensembl); ok {
		return x.Ensembl
	}
	return nil
}

func (m *Xref) GetTaxonomy() *TaxoAttr {
	if x, ok := m.GetAttributes().(*Xref_Taxonomy); ok {
		return x.Taxonomy
	}
	return nil
}

func (m *Xref) GetHmdb() *HmdbAttr {
	if x, ok := m.GetAttributes().(*Xref_Hmdb); ok {
		return x.Hmdb
	}
	return nil
}

func (m *Xref) GetEna() *EnaAttr {
	if x, ok := m.GetAttributes().(*Xref_Ena); ok {
		return x.Ena
	}
	return nil
}

func (m *Xref) GetPdb() *PdbAttr {
	if x, ok := m.GetAttributes().(*Xref_Pdb); ok {
		return x.Pdb
	}
	return nil
}

func (m *Xref) GetDrugbank() *DrugbankAttr {
	if x, ok := m.GetAttributes().(*Xref_Drugbank); ok {
		return x.Drugbank
	}
	return nil
}

func (m *Xref) GetOrphanet() *OrphanetAttr {
	if x, ok := m.GetAttributes().(*Xref_Orphanet); ok {
		return x.Orphanet
	}
	return nil
}

func (m *Xref) GetReactome() *ReactomeAttr {
	if x, ok := m.GetAttributes().(*Xref_Reactome); ok {
		return x.Reactome
	}
	return nil
}

func (m *Xref) GetChembl() *ChemblAttr {
	if x, ok := m.GetAttributes().(*Xref_Chembl); ok {
		return x.Chembl
	}
	return nil
}

func (m *Xref) GetUfeature() *UniprotFeatureAttr {
	if x, ok := m.GetAttributes().(*Xref_Ufeature); ok {
		return x.Ufeature
	}
	return nil
}

func (m *Xref) GetEfo() *EfoAttr {
	if x, ok := m.GetAttributes().(*Xref_Efo); ok {
		return x.Efo
	}
	return nil
}

func (m *Xref) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Xref) GetEntries() []*XrefEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *Xref) GetDatasetCounts() []*XrefDomainCount {
	if m != nil {
		return m.DatasetCounts
	}
	return nil
}

func (m *Xref) GetDatasetPages() map[uint32]*PageInfo {
	if m != nil {
		return m.DatasetPages
	}
	return nil
}

func (m *Xref) GetPages() []string {
	if m != nil {
		return m.Pages
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Xref) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Xref_Empty)(nil),
		(*Xref_Uniprot)(nil),
		(*Xref_Gontology)(nil),
		(*Xref_Hgnc)(nil),
		(*Xref_Interpro)(nil),
		(*Xref_Ensembl)(nil),
		(*Xref_Taxonomy)(nil),
		(*Xref_Hmdb)(nil),
		(*Xref_Ena)(nil),
		(*Xref_Pdb)(nil),
		(*Xref_Drugbank)(nil),
		(*Xref_Orphanet)(nil),
		(*Xref_Reactome)(nil),
		(*Xref_Chembl)(nil),
		(*Xref_Ufeature)(nil),
		(*Xref_Efo)(nil),
	}
}

type PageInfo struct {
	Pages                []string `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{15}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPages() []string {
	if m != nil {
		return m.Pages
	}
	return nil
}

type XrefEntry struct {
	Dataset              uint32   `protobuf:"varint,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XrefEntry) Reset()         { *m = XrefEntry{} }
func (m *XrefEntry) String() string { return proto.CompactTextString(m) }
func (*XrefEntry) ProtoMessage()    {}
func (*XrefEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{16}
}

func (m *XrefEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XrefEntry.Unmarshal(m, b)
}
func (m *XrefEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XrefEntry.Marshal(b, m, deterministic)
}
func (m *XrefEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XrefEntry.Merge(m, src)
}
func (m *XrefEntry) XXX_Size() int {
	return xxx_messageInfo_XrefEntry.Size(m)
}
func (m *XrefEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_XrefEntry.DiscardUnknown(m)
}

var xxx_messageInfo_XrefEntry proto.InternalMessageInfo

func (m *XrefEntry) GetDataset() uint32 {
	if m != nil {
		return m.Dataset
	}
	return 0
}

func (m *XrefEntry) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type XrefDomainCount struct {
	Dataset              uint32   `protobuf:"varint,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Count                uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XrefDomainCount) Reset()         { *m = XrefDomainCount{} }
func (m *XrefDomainCount) String() string { return proto.CompactTextString(m) }
func (*XrefDomainCount) ProtoMessage()    {}
func (*XrefDomainCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{17}
}

func (m *XrefDomainCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XrefDomainCount.Unmarshal(m, b)
}
func (m *XrefDomainCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XrefDomainCount.Marshal(b, m, deterministic)
}
func (m *XrefDomainCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XrefDomainCount.Merge(m, src)
}
func (m *XrefDomainCount) XXX_Size() int {
	return xxx_messageInfo_XrefDomainCount.Size(m)
}
func (m *XrefDomainCount) XXX_DiscardUnknown() {
	xxx_messageInfo_XrefDomainCount.DiscardUnknown(m)
}

var xxx_messageInfo_XrefDomainCount proto.InternalMessageInfo

func (m *XrefDomainCount) GetDataset() uint32 {
	if m != nil {
		return m.Dataset
	}
	return 0
}

func (m *XrefDomainCount) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Alias struct {
	Identifiers          []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alias) Reset()         { *m = Alias{} }
func (m *Alias) String() string { return proto.CompactTextString(m) }
func (*Alias) ProtoMessage()    {}
func (*Alias) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{18}
}

func (m *Alias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alias.Unmarshal(m, b)
}
func (m *Alias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alias.Marshal(b, m, deterministic)
}
func (m *Alias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alias.Merge(m, src)
}
func (m *Alias) XXX_Size() int {
	return xxx_messageInfo_Alias.Size(m)
}
func (m *Alias) XXX_DiscardUnknown() {
	xxx_messageInfo_Alias.DiscardUnknown(m)
}

var xxx_messageInfo_Alias proto.InternalMessageInfo

func (m *Alias) GetIdentifiers() []string {
	if m != nil {
		return m.Identifiers
	}
	return nil
}

func init() {
	proto.RegisterType((*BiobtreeGetRequest)(nil), "pbuf.BiobtreeGetRequest")
	proto.RegisterType((*BiobtreeGetPageRequest)(nil), "pbuf.BiobtreeGetPageRequest")
	proto.RegisterType((*BiobtreeFilterRequest)(nil), "pbuf.BiobtreeFilterRequest")
	proto.RegisterType((*BiobtreeMapFilterRequest)(nil), "pbuf.BiobtreeMapFilterRequest")
	proto.RegisterType((*BiobtreeMetaRequest)(nil), "pbuf.BiobtreeMetaRequest")
	proto.RegisterType((*BiobtreeGetResponse)(nil), "pbuf.BiobtreeGetResponse")
	proto.RegisterType((*BiobtreeGetPageResponse)(nil), "pbuf.BiobtreeGetPageResponse")
	proto.RegisterType((*BiobtreeFilterResponse)(nil), "pbuf.BiobtreeFilterResponse")
	proto.RegisterType((*BiobtreeMapFilterResponse)(nil), "pbuf.BiobtreeMapFilterResponse")
	proto.RegisterType((*BiobtreeMetaResponse)(nil), "pbuf.BiobtreeMetaResponse")
	proto.RegisterMapType((map[string]*BiobtreeMetaKeyValue)(nil), "pbuf.BiobtreeMetaResponse.ResultsEntry")
	proto.RegisterType((*BiobtreeMetaKeyValue)(nil), "pbuf.BiobtreeMetaKeyValue")
	proto.RegisterMapType((map[string]string)(nil), "pbuf.BiobtreeMetaKeyValue.KeyvaluesEntry")
	proto.RegisterType((*Result)(nil), "pbuf.Result")
	proto.RegisterType((*MapFilterResult)(nil), "pbuf.MapFilterResult")
	proto.RegisterType((*MapFilter)(nil), "pbuf.MapFilter")
	proto.RegisterType((*Xref)(nil), "pbuf.Xref")
	proto.RegisterMapType((map[uint32]*PageInfo)(nil), "pbuf.Xref.DatasetPagesEntry")
	proto.RegisterType((*PageInfo)(nil), "pbuf.PageInfo")
	proto.RegisterType((*XrefEntry)(nil), "pbuf.XrefEntry")
	proto.RegisterType((*XrefDomainCount)(nil), "pbuf.XrefDomainCount")
	proto.RegisterType((*Alias)(nil), "pbuf.Alias")
}

func init() { proto.RegisterFile("app.proto", fileDescriptor_e0f9056a14b86d47) }

var fileDescriptor_e0f9056a14b86d47 = []byte{
	// 1109 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xeb, 0x6e, 0x1b, 0x45,
	0x14, 0xae, 0xef, 0xf6, 0x49, 0x9c, 0xcb, 0x34, 0x97, 0xc9, 0x12, 0x8a, 0x59, 0x45, 0x25, 0x41,
	0x25, 0x44, 0x41, 0x42, 0xa8, 0x6a, 0x81, 0x34, 0xd7, 0xd2, 0xa0, 0x96, 0x85, 0x56, 0xfd, 0x45,
	0x35, 0xb6, 0xc7, 0xce, 0xca, 0xf6, 0xce, 0x32, 0x3b, 0x1b, 0xe2, 0x87, 0xe1, 0x21, 0x78, 0x1f,
	0xfe, 0xf3, 0x1a, 0x68, 0x6e, 0xeb, 0xd9, 0x8d, 0x13, 0x81, 0xf8, 0xb7, 0x73, 0xce, 0x77, 0xbe,
	0xf9, 0xce, 0x99, 0x9d, 0x33, 0x07, 0x5a, 0x24, 0x8e, 0xf7, 0x63, 0xce, 0x04, 0x43, 0xd5, 0xb8,
	0x9b, 0x0e, 0x3c, 0x20, 0x42, 0x70, 0x6d, 0xf1, 0x0f, 0x00, 0xbd, 0x08, 0x59, 0x57, 0x70, 0x4a,
	0xcf, 0xa9, 0x08, 0xe8, 0x6f, 0x29, 0x4d, 0x04, 0xf2, 0xa0, 0x39, 0xa2, 0xd3, 0xdf, 0x19, 0xef,
	0x27, 0xb8, 0xd4, 0xa9, 0xec, 0xb6, 0x82, 0x6c, 0xed, 0x5f, 0xc3, 0x86, 0x13, 0xf1, 0x86, 0x0c,
	0xa9, 0x8d, 0xc2, 0xd0, 0x30, 0x28, 0x5c, 0xea, 0x94, 0x76, 0x5b, 0x81, 0x5d, 0x4a, 0x4f, 0x9f,
	0x08, 0x92, 0x50, 0x81, 0xcb, 0x9d, 0xd2, 0x6e, 0x2d, 0xb0, 0x4b, 0x84, 0xa0, 0x1a, 0x93, 0x21,
	0xc5, 0x15, 0x65, 0x56, 0xdf, 0x68, 0x0d, 0x6a, 0x82, 0x09, 0x32, 0xc6, 0x55, 0x65, 0xd4, 0x0b,
	0x7f, 0x0a, 0xeb, 0x76, 0xdf, 0xb3, 0x70, 0x2c, 0x28, 0xff, 0x3f, 0xdb, 0x62, 0x68, 0x0c, 0x14,
	0x49, 0x82, 0x2b, 0x9d, 0xca, 0x6e, 0x3b, 0xb0, 0xcb, 0x4c, 0x50, 0x75, 0x26, 0xc8, 0xff, 0x15,
	0xb0, 0xdd, 0xfa, 0x47, 0x12, 0xe7, 0x77, 0xbf, 0xa7, 0x54, 0xe8, 0x31, 0x2c, 0x4d, 0x2c, 0xfe,
	0xa7, 0x94, 0xf2, 0xa9, 0x92, 0xd1, 0x0a, 0x0a, 0x56, 0x7f, 0x1d, 0x1e, 0x66, 0xfc, 0x54, 0x10,
	0x43, 0xed, 0x3f, 0x9f, 0x99, 0xd5, 0xd9, 0x24, 0x31, 0x8b, 0x12, 0x8a, 0x1e, 0x43, 0x83, 0xd3,
	0x24, 0x1d, 0x0b, 0xbd, 0xe1, 0xc2, 0xe1, 0xe2, 0xbe, 0x3c, 0xd6, 0xfd, 0x40, 0x19, 0x03, 0xeb,
	0xf4, 0xbf, 0x83, 0xcd, 0x5b, 0x07, 0x65, 0x28, 0x76, 0xa0, 0xae, 0x51, 0xaa, 0x62, 0x45, 0x06,
	0xe3, 0xf3, 0xbf, 0x9d, 0x9d, 0xb4, 0xcd, 0xf9, 0x3f, 0xc5, 0x5f, 0xc2, 0xd6, 0x9c, 0xb2, 0x19,
	0x8a, 0x2f, 0x8b, 0x59, 0xac, 0x6b, 0x0e, 0x17, 0x99, 0x4b, 0xe7, 0xcf, 0x12, 0xac, 0xe5, 0xab,
	0x64, 0x98, 0x8e, 0x8a, 0x4c, 0x9f, 0x69, 0xa6, 0x79, 0x60, 0x23, 0x31, 0x39, 0x8d, 0x04, 0x9f,
	0x66, 0xdc, 0xde, 0x3b, 0x58, 0x74, 0x1d, 0x68, 0x05, 0x2a, 0x23, 0x3a, 0x35, 0xbf, 0x93, 0xfc,
	0x44, 0x07, 0x50, 0xbb, 0x26, 0xe3, 0x94, 0xaa, 0x13, 0x5c, 0x38, 0xf4, 0x6e, 0x6f, 0xf1, 0x8a,
	0x4e, 0xdf, 0x49, 0x44, 0xa0, 0x81, 0x4f, 0xcb, 0xdf, 0x94, 0xfc, 0x3f, 0x0a, 0x9a, 0x2d, 0x06,
	0x9d, 0x43, 0x6b, 0x44, 0xa7, 0x0a, 0x68, 0x55, 0xef, 0xdd, 0x4d, 0xb9, 0xff, 0xca, 0x62, 0xb5,
	0xee, 0x59, 0xac, 0xf7, 0x0c, 0x96, 0xf2, 0xce, 0x39, 0xda, 0xd7, 0x5c, 0xed, 0x2d, 0x57, 0xdf,
	0x0f, 0x50, 0xd7, 0x79, 0xa3, 0x9d, 0x62, 0x11, 0x41, 0xcb, 0x79, 0xcf, 0xe9, 0x20, 0xab, 0x93,
	0xfc, 0xd9, 0x23, 0x7a, 0x23, 0xd4, 0x05, 0xd1, 0x64, 0xd9, 0xda, 0x7f, 0x0f, 0xcb, 0x85, 0xb3,
	0x43, 0x7b, 0x45, 0xd2, 0xe5, 0xe2, 0x19, 0xff, 0x2b, 0xe6, 0xb7, 0xd0, 0xca, 0x22, 0x90, 0x0f,
	0xf5, 0x84, 0xa5, 0xbc, 0x47, 0xcd, 0xaf, 0xe7, 0xea, 0x34, 0x1e, 0x99, 0x8c, 0x20, 0x7c, 0x48,
	0x45, 0x82, 0xcb, 0xb7, 0x93, 0x31, 0x2e, 0xff, 0xaf, 0x26, 0x54, 0xa5, 0xc5, 0x6d, 0x13, 0x92,
	0xb3, 0x3d, 0x6b, 0x13, 0x9b, 0xd0, 0x08, 0x93, 0x0f, 0xe3, 0x30, 0x1a, 0x29, 0x51, 0xcd, 0xa0,
	0x1e, 0x26, 0x97, 0x61, 0x34, 0x42, 0x8f, 0x00, 0xc2, 0x3e, 0x8d, 0x44, 0x38, 0x08, 0x29, 0x57,
	0xcd, 0xab, 0x15, 0x38, 0x16, 0xb7, 0x27, 0x55, 0xf3, 0x3d, 0x69, 0x03, 0x6a, 0x74, 0x12, 0x8b,
	0x29, 0xae, 0x49, 0xc2, 0x8b, 0x07, 0x81, 0x5e, 0xa2, 0x2f, 0xa0, 0x91, 0x46, 0xa1, 0x6c, 0xca,
	0xb8, 0xae, 0x12, 0x5b, 0xd5, 0x9a, 0xdf, 0x6a, 0xe3, 0x91, 0x10, 0xfc, 0xe2, 0x41, 0x60, 0x31,
	0xe8, 0x09, 0xb4, 0x86, 0x2c, 0x12, 0x6c, 0xcc, 0x86, 0x53, 0xdc, 0x70, 0x2f, 0xe1, 0x39, 0x33,
	0xd8, 0x19, 0x00, 0xed, 0x40, 0xf5, 0x6a, 0x18, 0xf5, 0x70, 0x53, 0x01, 0x97, 0x34, 0xf0, 0x62,
	0x18, 0xf5, 0x0c, 0x54, 0x79, 0xd1, 0x01, 0x34, 0xc3, 0x48, 0x50, 0x1e, 0x73, 0x86, 0x5b, 0x0a,
	0x89, 0x34, 0xf2, 0xa5, 0xb1, 0x1a, 0x74, 0x86, 0x92, 0xa2, 0x69, 0x94, 0xd0, 0x49, 0x77, 0x8c,
	0xc1, 0x15, 0x7d, 0xaa, 0x8d, 0x56, 0xb4, 0xc1, 0xa0, 0x27, 0xd0, 0x14, 0xe4, 0x86, 0x45, 0x6c,
	0x32, 0xc5, 0x0b, 0xae, 0x94, 0x5f, 0xc8, 0x4d, 0x46, 0x6e, 0x11, 0x4a, 0xf4, 0xa4, 0xdf, 0xc5,
	0x8b, 0x39, 0xd1, 0x93, 0x7e, 0x37, 0x13, 0x3d, 0xe9, 0x77, 0xd1, 0xa7, 0x50, 0xa1, 0x11, 0xc1,
	0x6d, 0x05, 0x6a, 0xdb, 0xed, 0x89, 0xc1, 0x48, 0x9f, 0x84, 0xc4, 0xfd, 0x2e, 0x5e, 0x72, 0x21,
	0x6f, 0x32, 0x1a, 0xe9, 0x93, 0xa9, 0xf7, 0x79, 0x3a, 0xec, 0x92, 0x68, 0x84, 0x97, 0xdd, 0xd4,
	0x4f, 0x8c, 0xd5, 0xaa, 0xb3, 0x28, 0x19, 0xc1, 0x78, 0x7c, 0x45, 0x22, 0x2a, 0xf0, 0x8a, 0x1b,
	0xf1, 0xda, 0x58, 0x6d, 0x84, 0x45, 0xc9, 0x08, 0x4e, 0x49, 0x4f, 0xb0, 0x09, 0xc5, 0xab, 0x6e,
	0x44, 0x60, 0xac, 0x36, 0xc2, 0xa2, 0xd0, 0xe7, 0x50, 0xef, 0x5d, 0xa9, 0xea, 0x22, 0x85, 0x5f,
	0xd1, 0xf8, 0xe3, 0x2b, 0xa7, 0xb8, 0x06, 0x81, 0xbe, 0x86, 0x66, 0x3a, 0xa0, 0x44, 0xa4, 0x9c,
	0xe2, 0x87, 0x0a, 0x8d, 0x73, 0x3f, 0xd0, 0x99, 0xf6, 0xd9, 0x3d, 0x2c, 0x56, 0xd5, 0x6f, 0xc0,
	0xf0, 0x56, 0xae, 0x7e, 0x03, 0x96, 0xd5, 0x6f, 0xc0, 0x64, 0xff, 0xe8, 0xb1, 0x34, 0x12, 0x78,
	0x4d, 0xdd, 0x0e, 0xbd, 0x90, 0x97, 0x9b, 0x46, 0x82, 0x87, 0x34, 0xc1, 0xeb, 0xee, 0xe5, 0x96,
	0x57, 0xca, 0xb4, 0x57, 0xe3, 0x47, 0xcf, 0x60, 0xc9, 0xdc, 0xa8, 0x0f, 0x2a, 0x36, 0xc1, 0x1b,
	0x6e, 0xcb, 0x97, 0x11, 0x27, 0x6c, 0x42, 0xc2, 0xe8, 0x58, 0x7a, 0x83, 0xb6, 0x01, 0xab, 0x55,
	0x82, 0xbe, 0x87, 0x45, 0x63, 0x90, 0x6f, 0x58, 0x82, 0x37, 0x55, 0xec, 0xf6, 0x2c, 0x76, 0xff,
	0xc4, 0x71, 0xeb, 0xad, 0x73, 0x11, 0x32, 0x81, 0x58, 0x85, 0x62, 0xf5, 0x40, 0xeb, 0x85, 0xf7,
	0x1a, 0x56, 0x6f, 0x05, 0xba, 0xdd, 0xb3, 0xad, 0xbb, 0xe7, 0x4e, 0xbe, 0xf3, 0x9b, 0xff, 0x50,
	0x86, 0xbc, 0x8c, 0x06, 0xcc, 0xe9, 0xa6, 0x2f, 0x16, 0x41, 0x4d, 0x56, 0x61, 0x37, 0x15, 0x34,
	0xf1, 0x3b, 0xd0, 0xb4, 0xa0, 0x99, 0x80, 0x92, 0x23, 0xc0, 0x3f, 0x85, 0x56, 0x56, 0xac, 0x7b,
	0x9a, 0x50, 0xbe, 0xd7, 0x94, 0x8b, 0xbd, 0xc6, 0x3f, 0x82, 0xe5, 0x42, 0x05, 0xef, 0x21, 0xcb,
	0xce, 0xb2, 0xec, 0x9c, 0xa5, 0xbf, 0x07, 0xb5, 0xa3, 0x71, 0x48, 0x12, 0xd4, 0x81, 0x85, 0x19,
	0xb3, 0x95, 0xeb, 0x9a, 0x0e, 0xff, 0x2e, 0xc3, 0xb2, 0x7d, 0xa3, 0x7e, 0xa6, 0xfc, 0x3a, 0xec,
	0x51, 0xf4, 0x14, 0x2a, 0xe7, 0x72, 0xa8, 0xca, 0xbf, 0x60, 0xb3, 0x79, 0xd2, 0xdb, 0x9a, 0xe3,
	0x31, 0xaf, 0xf7, 0x19, 0x34, 0xcc, 0x74, 0x82, 0xb6, 0x6f, 0xa1, 0x9c, 0xe9, 0xd2, 0xfb, 0xf8,
	0x0e, 0xaf, 0xe1, 0x39, 0x86, 0xba, 0x79, 0x21, 0x3e, 0xca, 0x03, 0x73, 0xe3, 0x9a, 0xb7, 0x3d,
	0xdf, 0x69, 0x48, 0x2e, 0xdd, 0x97, 0xe6, 0x51, 0xe1, 0x41, 0x2e, 0x4c, 0x7e, 0xde, 0x27, 0x77,
	0xfa, 0x0d, 0xdb, 0x73, 0xa8, 0xca, 0x57, 0x1c, 0x6d, 0xcd, 0x9b, 0x47, 0x34, 0x87, 0x77, 0xf7,
	0xa8, 0xd2, 0xad, 0xab, 0x09, 0xfd, 0xab, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xa4, 0x91,
	0xad, 0xc0, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BiobtreeServiceClient is the client API for BiobtreeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BiobtreeServiceClient interface {
	Get(ctx context.Context, in *BiobtreeGetRequest, opts ...grpc.CallOption) (*BiobtreeGetResponse, error)
	GetPage(ctx context.Context, in *BiobtreeGetPageRequest, opts ...grpc.CallOption) (*BiobtreeGetPageResponse, error)
	Filter(ctx context.Context, in *BiobtreeFilterRequest, opts ...grpc.CallOption) (*BiobtreeFilterResponse, error)
	MapFilter(ctx context.Context, in *BiobtreeMapFilterRequest, opts ...grpc.CallOption) (*BiobtreeMapFilterResponse, error)
	Meta(ctx context.Context, in *BiobtreeMetaRequest, opts ...grpc.CallOption) (*BiobtreeMetaResponse, error)
}

type biobtreeServiceClient struct {
	cc *grpc.ClientConn
}

func NewBiobtreeServiceClient(cc *grpc.ClientConn) BiobtreeServiceClient {
	return &biobtreeServiceClient{cc}
}

func (c *biobtreeServiceClient) Get(ctx context.Context, in *BiobtreeGetRequest, opts ...grpc.CallOption) (*BiobtreeGetResponse, error) {
	out := new(BiobtreeGetResponse)
	err := c.cc.Invoke(ctx, "/pbuf.BiobtreeService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *biobtreeServiceClient) GetPage(ctx context.Context, in *BiobtreeGetPageRequest, opts ...grpc.CallOption) (*BiobtreeGetPageResponse, error) {
	out := new(BiobtreeGetPageResponse)
	err := c.cc.Invoke(ctx, "/pbuf.BiobtreeService/GetPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *biobtreeServiceClient) Filter(ctx context.Context, in *BiobtreeFilterRequest, opts ...grpc.CallOption) (*BiobtreeFilterResponse, error) {
	out := new(BiobtreeFilterResponse)
	err := c.cc.Invoke(ctx, "/pbuf.BiobtreeService/Filter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *biobtreeServiceClient) MapFilter(ctx context.Context, in *BiobtreeMapFilterRequest, opts ...grpc.CallOption) (*BiobtreeMapFilterResponse, error) {
	out := new(BiobtreeMapFilterResponse)
	err := c.cc.Invoke(ctx, "/pbuf.BiobtreeService/MapFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *biobtreeServiceClient) Meta(ctx context.Context, in *BiobtreeMetaRequest, opts ...grpc.CallOption) (*BiobtreeMetaResponse, error) {
	out := new(BiobtreeMetaResponse)
	err := c.cc.Invoke(ctx, "/pbuf.BiobtreeService/Meta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BiobtreeServiceServer is the server API for BiobtreeService service.
type BiobtreeServiceServer interface {
	Get(context.Context, *BiobtreeGetRequest) (*BiobtreeGetResponse, error)
	GetPage(context.Context, *BiobtreeGetPageRequest) (*BiobtreeGetPageResponse, error)
	Filter(context.Context, *BiobtreeFilterRequest) (*BiobtreeFilterResponse, error)
	MapFilter(context.Context, *BiobtreeMapFilterRequest) (*BiobtreeMapFilterResponse, error)
	Meta(context.Context, *BiobtreeMetaRequest) (*BiobtreeMetaResponse, error)
}

func RegisterBiobtreeServiceServer(s *grpc.Server, srv BiobtreeServiceServer) {
	s.RegisterService(&_BiobtreeService_serviceDesc, srv)
}

func _BiobtreeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiobtreeGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BiobtreeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbuf.BiobtreeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BiobtreeServiceServer).Get(ctx, req.(*BiobtreeGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BiobtreeService_GetPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiobtreeGetPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BiobtreeServiceServer).GetPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbuf.BiobtreeService/GetPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BiobtreeServiceServer).GetPage(ctx, req.(*BiobtreeGetPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BiobtreeService_Filter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiobtreeFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BiobtreeServiceServer).Filter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbuf.BiobtreeService/Filter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BiobtreeServiceServer).Filter(ctx, req.(*BiobtreeFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BiobtreeService_MapFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiobtreeMapFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BiobtreeServiceServer).MapFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbuf.BiobtreeService/MapFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BiobtreeServiceServer).MapFilter(ctx, req.(*BiobtreeMapFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BiobtreeService_Meta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiobtreeMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BiobtreeServiceServer).Meta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbuf.BiobtreeService/Meta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BiobtreeServiceServer).Meta(ctx, req.(*BiobtreeMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BiobtreeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbuf.BiobtreeService",
	HandlerType: (*BiobtreeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _BiobtreeService_Get_Handler,
		},
		{
			MethodName: "GetPage",
			Handler:    _BiobtreeService_GetPage_Handler,
		},
		{
			MethodName: "Filter",
			Handler:    _BiobtreeService_Filter_Handler,
		},
		{
			MethodName: "MapFilter",
			Handler:    _BiobtreeService_MapFilter_Handler,
		},
		{
			MethodName: "Meta",
			Handler:    _BiobtreeService_Meta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}
